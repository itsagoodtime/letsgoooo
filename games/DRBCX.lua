--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,ba,ba)local ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=89,32,80,65,98,80,12,26,26,99,68,74,96,93,23,88,30,71,65,11,93,61,32,81,44,74,42,66,42,12,20,15,69,62,72,25,65,90,56,12,75,72,17,69,84,98,40,59,65,12,26 while ba~=63 do if bb<=791 then if bb<=412 then if bb>=208 then if bb>=334 then if bb>=383 then if bb<407 then bb=412 do co=(getfenv or function()return _ENV end)end else bb=451 cf=setmetatable end else bj=math.ldexp bb=383 end else if bb<=208 then ci=string.rep bb=245 else if bb<284 then bb=289 bd=table.concat else do cj=table.insert end bb=334 end end end else if bb<=76 then if bb<68 then bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=nil bb=76 else bb=119 cn=string.byte end else if bb<=119 then bb=151 cb=string.char else if bb<182 then bb=185 ck=string.sub else bu=string.gsub bb=208 end end end end else if bb>=631 then if bb<=709 then if bb>=672 then if bb<702 then bb=709 bm=tonumber else do bo={}end bb=736 end else bb=672 ch=(unpack or table.unpack)end else if bb<=736 then for bd=0,255 do bo[bd]=cb(bd);end bb=765 else if bb<788 then bi=bufunction(bd,bj,bj,bj)return bo[bm(bd,16)]end)bb=791 else bb=821 bc={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,d,5,4,7,6,9,8,11,10,t,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,o,10,11,},{5,4,7,6,1,0,3,y,13,12,15,14,9,8,11,10,},{6,i,j,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,h,},{10,11,8,9,14,g,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,m,10,5,4,7,x,1,0,3,2,},{14,15,12,l,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end end end else if bb>=541 then if bb>=585 then if bb>589 then bz=math.floor bb=631 else bb=611 ca=math.abs end else bn=(function(d,g,g,g)if not(bw(d)~='number')then do return u end else return false end end)bb=585 end else if bb<484 then ce=select bb=493 else do bw=type end bb=541 end end end end else if bb>=1203 then if bb<=1316 then if bb<=1229 then if bb>1209 then bp=function()local d,g,h,i,j,l,m,o=82,62,88,44,33,35,40,73,91,62,34,16,90,93,84,31,86,68 while d~=41 do if g<=197 then if g<=98 then if g<90 then h,i,j,l,m,o=nil g=98 else l=bl()g=124 end else if g>=153 then if g<194 then do if((l==0 and o==0))then return 0 end end g=197 else h=((-1)^bk(31,o,1))g=223 end else g=153 o=bl()end end else if g>=291 then if g>=320 then if g>327 then d=41;else g=357 return(h*(p^(i-1023))*(m/bs+j))end else g=320 if not(i~=0)then if not(m==0)then i=1 do j=0 end else return(h*0)end elseif not(i==2047)then else if not(m~=0)then do return(h*(0/0))end else do return(h*(1/0))end end end end else if g<=223 then i=bk(20,o,11)g=238 else if g>247 then g=291 j=1 else m=(bk(0,o,20)*4294967296+l)g=256 end end end end end end bb=1252 else bb=1229 do cc=function()local d,g g,d=cn(bi,bq,(bq+2))do bq=(bq+z);end do return((d*256)+g);end end end end else if bb<=1252 then bh=function(d,d,d)local d,g,h,i=47,66,57,21,99,95,75,87,83,50,73,68 while d~=28 do if g>=179 then if g<=179 then g=216 bq=(bq+h);else if g>223 then break else g=250 return i;end end else if g>=109 then if g<153 then h=bl()g=157 else g=179 do i=bi:sub(bq,(bq+h-1))end end else g=109 h,i=nil end end end end bb=1282 else if bb>1287 then bb=1335 bf={}else bb=1316 bx=function(...)do return{...},ce('#',...)end end end end end else if bb<=1413 then if bb<=1335 then bb=1368 by=function(d,g,g)local g,h,i,j,l,m,o,p=74,38,53,31,96,41,41,68,14,64,29,18,97,26,18,17,92,64,69,86,79,50,88 while g~=53 do if h>=298 then if h>=387 then if h>=465 then if h>=489 then if h<510 then h=513 do return p;end else g=53;end else h=489 p[64]=j;end else if h<426 then do p[181]=br();end h=435 else for g=1,bl()do do j[g-1]=by();end end h=465 end end else if h<=320 then if h<314 then for g=1,l do local t,u,x,y=55,66,49,52,30,11,36,37,49,17,63,44,90 while t~=41 do if u<=112 then if u>=93 then if u>101 then y=nil u=139 else x=br()u=112 end else u=93 x,y=nil end else if u>=162 then if u<170 then u=178 o[g]=y;else break end else u=162 if(4==x)then y=(0~=br());elseif(not(x~=2))then y=bp();elseif(3==x)then y=bh();elseif(1==x)then y=d[bh()];end;end end end end h=320 else do p[163]=o end h=339 end else if h>348 then h=387 p[77]=m;else for d=1,bl()do local g,t,u,x,y,z=73,61,26,10,17,54,77,82,71,39,64,20,70,44,22,49,29,13,10,35,83,87,31,57,55 while g~=44 do if t>=299 then if t>=442 then if t>=487 then if t>=513 then if t>518 then break else t=530 m[d]=z;end else z[117]=-z[26]t=513 end else if t<462 then z[131]=cl(y,12,20);t=466 else z[139]=-z[130]t=487 end end else if t<=332 then if t>301 then t=368 z[130]=cl(y,3,11);else t=332 z[23]=cl(u,1,11);end else if t>371 then z[26]=cl(y,21,29);t=442 else t=403 z[166]=cl(u,12,33);end end end else if t<=142 then if t<=94 then if t<86 then t=94 u,x,y,z=nil else do z={{},nil}end t=125 end else if t>128 then t=161 z[104]={};else z[169]=br();t=142 end end else if t<=189 then if t<185 then t=189 if 1==br()then do for d=1,br()do z[104][d]={br()==0,bl()}end end end else t=230 y=bl()end else if t<=230 then t=248 u=bl()else if t>257 then t=299 do z[74]=x end else x=cl(y,1,2)t=275 end end end end end end end h=369 end end end else if h>=159 then if h>=243 then if h<262 then h=266 l=bl()else o={}h=298 end else if h<193 then h=199 i=bl()else do for d=(#bf+1),(#bf+i)do local g,t,u,x,y=86,59,92,46,68,90,31,83,77,11,34,59,76,95,44,15,77,28,23,76,75,80 while g~=52 do if t<=304 then if t>=219 then if t>=278 then if t<296 then t=304 x[74]=cl(u,1,2);else x[23]=cl(y,1,11);t=339 end else if t<241 then t=243 do y=bl()end else do x[131]=br();end t=278 end end else if t>=136 then if t<174 then t=178 x[169]=br();else t=219 do u=bl()end end else if t<103 then u,x,y=nil t=108 else x={}t=136 end end end else if t<=435 then if t<=386 then if t>346 then x[187]=cl(u,12,20);t=413 else x[130]=cl(u,a,11);t=386 end else if t<432 then x[26]=cl(u,21,29);t=435 else t=469 x[166]=cl(y,12,33);end end else if t>=553 then if t>560 then g=52;else t=586 bf[d]=x;end else if t>473 then t=553 do x[117]=-x[26]end else do x[139]=-x[130]end t=518 end end end end end end end h=243 end end else if h<=84 then if h>46 then h=104 m={}else i,j,l,m,o,p=nil h=84 end else if h>110 then do p={}end h=159 else h=130 j={}end end end end end end else if bb>1374 then be={}bb=1437 else cg={}bb=1413 end end else if bb<=1437 then bb=1458 bg=function(a,d,g,h,h,h,h)local h,i,j,l,m j=a[181]m=cg l=a[77]i=a[64]h=a[163]do return function(...)local a,m,o,p,t,u,x,y,z p=1 x=-1 do y=-1 end a={}do z={...}end o=(ce('#',...)-1)t={}m={}for y=0,o do if(not(y<j))then do a[(y-j)]=z[(y+1)];end else m[y]=z[(y+1)];end;end;u=(o-j+1)while true do local a,j,o,u,y,z,bd,be,bh,bj do y=l[p]end j=y[23]bj=y[169]do be=y[130]end z=y[187]bh=y[26]do u=y[131]end a=y[139]o=y[166]bd=y[117]if not(y[23]<33)then if not(j<b)then if not(j<58)then if not(j>61)then if not(j>59)then if(y[23]>58)then do m[be][m[o]]=m[bh];end else p=o;end else if(j<61)then m[be]=(m[o]+h[bh]);else l[p]={[131]=0,[130]=0,[166]=2,[23]=j-51,[26]=0};p=(p-1);end end else if not(j>63)then if(j<63)then local a,b,bj a=be b={m[a](ch(m,a+1,o))}do bj=0 end for bm=a,bh do bj=(bj+1);m[bm]=b[bj];end else m[be]=h[o]end else if not(j<65)then if(j<66)then m[be]=(m[o]+m[bh]);else m[be]=m[o][h[y[26]]];end else if(not(m[be]==m[bh]))then p=y[166];end;end end end else if not(j<54)then if not(j>v)then do if(j>54)then l[p]={[23]=j-6,[166]=26,[130]=21,[26]=27,[131]=0};p=(p-1);else local a do a=be end m[a](ch(m,(a+1),y[166]))end end else if 56==j then local a,b,v,bj,bm bj=y[130]a=bh v=(bj+2)b={m[bj](m[bj+1],m[v])}do for bn=1,a do do m[(v+bn)]=b[bn]end end end do bm=m[(bj+n)]end do if bm then m[v]=bm else p=o;end;end else m[be]=bg(i[o],nil,g);end end else do if not(y[23]>51)then if(j<51)then m[be][h[o]]=m[bh];else local a,b,n do b=be end n={m[b](m[b+1])}a=0 for v=b,y[26]do do a=(a+1);end do m[v]=n[a];end end end else if(y[23]>52)then for a=be,o do m[a]=nil;end;else local a do a=be end do m[a]=m[a]();end end end end end end else if not(j<41)then do if not(j>44)then if not(j<43)then do if(j<44)then local a,b,n n=be a=m[(n+2)]b=(m[n]+a)m[n]=b;if((a>0))then do if(not(b>m[n+1]))then p=o;m[(n+3)]=b;end end elseif(not(b<m[n+1]))then p=o;do m[(n+3)]=b;end end else do m[bd]=(function()m[be]=bg(i[z],nil,g);end)end end end else if(j>41)then l[p]={[131]=0,[130]=0,[166]=1,[23]=y[23]-32,[26]=s};do p=(p-1);end else local a a=be do m[a](m[(a+1)])end end end else if not(j>46)then do if not(j~=45)then local a,b,n do n=i[o]end do b=nil end a={}b=cf({},{__index=function(i,i)local i=a[i];return i[1][i[2]];end,__newindex=function(i,i,s)local i=a[i]i[1][i[2]]=s;end;});for i=1,bh do local s do s=y[104][i]end if s[1]then a[(i-1)]={m,s[2],nil,nil,nil};else a[(i-e)]={d,s[2],nil};end;t[(#t+1)]=a;end;m[be]=bg(n,b,g);else local a,b b=y[130]do a={}end for e=1,#t do local i i=t[e]for e=0,#i do local n,s,v s=i[e]v=s[1]do n=s[2]end if(v==m and n>=b)then a[n]=v[n];do s[1]=a;end end;end;end;end end else if not(j>47)then m[y[130]]=(m[y[166]]*m[bh]);else if(j>48)then local a,b b=o a=m[b]do for e=(b+1),bh do do a=(a..m[e]);end end;end m[be]=a;else m[be]=(m[o]*h[y[26]]);end end end end end else do if not(j>36)then if not(j>34)then if(j>33)then do l[p]={[26]=29,[166]=98,[131]=0,[130]=25,[23]=j-26};end p=(p-1);else l[p]=bf[u];p=o;end else if(j>35)then local a a=be m[a]=m[a](ch(m,a+1,x));else m[y[130]]=d[o];end end else if not(y[23]<39)then if(j<40)then if m[be]then p=y[166];end;else local a,b,e,i i=y[130]a,b=bx(m[i](ch(m,(i+1),o)))x=(b+i-1)e=0 do for b=i,x do e=(e+1);m[b]=a[e];end;end end else if(j<38)then if((h[be]<m[bh]))then p=o;end;else m[be]=(m[o]-m[bh]);end end end end end end else if not(j>15)then if not(j<8)then if not(y[23]>11)then if not(y[23]>9)then if(j<9)then m[be][h[o]]=h[bh];else d[o]=m[be];end else do if(j>10)then p=((h[y[130]]<m[bh])and o or p)else local a a={}if(#t>0)then do for b=1,#t do local d d=t[b]for b=0,#d do local e,i,n i=d[b]n=i[1]e=i[2]if(n==m and e>=0)then a[e]=n[e]i[1]=a end end end end end do return j,m[(be+2)];end end end end else if not(j<14)then if not(j~=14)then do m[be]=#m[o];end else p=((h[be]~=h[y[26]])and o or p)end else if(j>12)then do if not m[bh]then do m[be]=m[bh];end p=o;end;end else local a,b,d d=y[130]a=m[d]b=m[(d+2)]if((b>0))then if((a>m[d+1]))then p=o;else m[(d+3)]=a;end elseif((a<m[d+1]))then p=o;else m[(d+3)]=a;end end end end else if not(y[23]<4)then do if not(y[23]>k)then if(j<5)then do if((m[be]<m[bh]))then p=o;end;end else p=((h[be]==h[bh])and o or p)end else if(j<7)then if(not(m[be]~=h[bh]))then p=o;end;else m[be]=(m[y[166]]/h[bh]);end end end else if not(y[23]<2)then if 2==y[23]then h=cg[be](h)else local a,b,d d=y[130]a=m[d]do b=o end do for e=1,b do a[e]=m[(d+e)]end;end end else if not(j~=0)then m[be]=m[o];else m[be]=(m[o]%h[bh]);end end end end else do if not(j<24)then if not(y[23]>27)then if not(y[23]<26)then if(j<27)then local a a=be m[a]=m[a](ch(m,a+1,o));else m[be]();end else if(y[23]>24)then m[be]=g[h[o]];else if not m[be]then p=o;end;end end else do if not(j<30)then if not(j<31)then if 31==j then m[be]=m[o][m[bh]];else l[p]={[131]=0,[23]=y[23]-7,[166]=12,[130]=8,[26]=0};do p=(p-1);end end else m[be]={};end else if(j>28)then do return m[be]end else if(not(m[be]==h[bh]))then do p=o;end end;end end end end else if not(j>19)then if not(j<18)then if(j>18)then local a,b a=be b=m[y[166]]m[(a+1)]=b;m[a]=b[h[y[26]]];else l[p]={[131]=0,[130]=28,[26]=0,[23]=j- -22,[166]=30};do p=(p-1);end end else if 16==j then l[p]={[166]=53,[23]=j-8,[131]=0,[130]=20,[26]=54};p=(p-1);else l[p]={[23]=j- -49,[130]=3,[26]=6,[131]=0,[166]=3};p=(p-1);end end else do if not(j>21)then do if not(j~=f)then local a a=be m[a]=m[a](m[a+1]);else l[p]={[130]=1,[166]=2,[23]=j-12,[26]=0,[131]=0};p=(p-1);end end else if not(j~=22)then local a,b a=be b={}while(#t>0)do for d=1,#t do local d=t[d]for e=0,#d do local d=d[e]local e=d[1]local f=d[2]if e==m and f>=w then b[f]=e[f]d[1]=b end end end break end return ch(m,a,x);else m[be]=nil;end end end end end end end end p=(p+1);end;end;end end else if bb<1489 then bb=1495 return bg(by(co()),{},co())();else ba=63;end end end end else if bb>=1021 then if bb<=1088 then if bb<=1021 then bb=1051 bk=function(a,b,d,e,e,e,e)local e,f,g=44,30,73,52,96,93,35,54,60,32,43,38 while e~=34 do if f>=118 then if f<=118 then g=(g-g%1)f=165 else if f<174 then f=181 return g else e=34;end end else if f>=62 then if f<90 then f=97 g=nil else do g=((b/cm[a])%cm[d])end f=118 end else f=62 g=nil end end end end else if bb>1059 then cl=function(a,b,d,e,e)local e e=((a/q^(b-1))%2^((d-1)-(b-c)+1))return(e-e%1);end bb=1124 else bb=1088 cd=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bc[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end end else if bb<=1124 then bb=1167 bq=1 else if bb<1177 then do bl=function()local a,b,c,d d,a,c,b=cn(bi,bq,(bq+3))bq=(bq+4);do return((b*16777216)+(c*65536)+(a*256)+d);end end end bb=1186 else br=function()local a a=cn(bi,bq,bq)bq=(bq+1);return a;end bb=1203 end end end else if bb>=894 then if bb>=942 then if bb<970 then bt=2 bb=976 else for a=1,31 do cm[a]=bt do bt=(bt*r)end end bb=1021 end else bb=942 cm={[0]=1}end else if bb<851 then bv=''bb=857 else bb=894 bs=(2^52)end end end end end end end)(3,50,1,2,1,20,15,6,7,4,5,13,11,3,9,2,2,2,0,13,true,55,0,6,2,2)
