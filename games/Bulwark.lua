--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,y,y)local y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=99,96,65,24,39,76,60,80,42,16,55,77,50,23,53,74,99,77,52,33,16,47,15,57,14,45,45,42,42,38,24,29,78,26,88,87,86,76,74,13,90,14,50,57,51,42,36,81,47,41 while y~=79 do if z<=788 then if z>=483 then if z<=608 then if z>=532 then if z<=532 then z=563 bq=(function(y,cn,cn,cn,cn)if'number'==ch(y)then return true else return false end end)else if z>567 then z=624 br=math.floor else bp=math.abs z=608 end end else if z>487 then z=532 ch=type else bn=select z=499 end end else if z<=702 then if z<=624 then cb=(unpack or table.unpack)z=670 else if z>672 then z=730 be={}else do cc=tonumber end z=702 end end else if z<=730 then z=772 for y=0,255 do be[y]=ca(y);end else if z>774 then z=829 cg={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,j,0,3,2,13,12,i,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,q,15,0,1,2,3,t,5,6,v,},{9,8,11,10,13,12,15,14,1,0,3,2,d,4,7,6,},{10,11,8,9,14,15,12,13,e,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,w,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,c,1,0,},nil,nil,nil}else ci=bhfunction(c,d)return be[cc(c,16)]end)z=788 end end end end else if z>=265 then if z>=384 then if z>=425 then if z<434 then z=441 do bv=(getfenv or function()return _ENV end)end else z=483 cl=setmetatable end else bk=math.ldexp z=425 end else if z<=265 then bg=string.rep z=310 else if z>316 then z=384 ce=table.insert else do bl=table.concat end z=352 end end end else if z<=138 then if z>105 then ba=string.byte z=177 else ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=nil z=138 end else if z<=177 then ca=string.char z=204 else if z>213 then bh=string.gsub z=265 else do ck=string.sub end z=248 end end end end end else if z<=1141 then if z<=929 then if z<=854 then if z<846 then do bs=''end z=854 else z=872 bc=(2^52)end else if z>=898 then if z<921 then bw=2 z=929 else z=966 for c=1,31 do do bz[c]=bw end do bw=(bw*2)end end end else bz={[0]=1}z=898 end end else if z>=1078 then if z>=1116 then if z>1124 then z=1189 bd=function()local c c=ba(ci,by,by)by=(by+1);return c;end else z=1141 cf=function()local c,d,e,i c,i,e,d=ba(ci,by,(by+3))by=(by+4);return((d*16777216)+(e*65536)+(i*256)+c);end end else z=1116 do by=1 end end else if z>=1000 then if z<1032 then z=1035 bj=(bit_lib and bit_lib.bxor or function(c,d)c=c%(2^32)d=d%(2^32)local e,i=0,1 while c>0 and d>0 do local j,q=c%16,d%16 e=e+cg[j+1][q+1]*i c=(c-j)/16 d=(d-q)/16 i=i*16 end e=e+c*i+d*i return e end)else z=1078 cm=function(c,d,e,i,i)local i do i=((c/2^(d-1))%2^((e-1)-(d-1)+1))end do return(i-i%1);end end end else bb=function(c,d,e,i,i,i,i)local i,j,q=55,50,99,14,71,98,79,36,87,76,97,56,36,50 while i~=38 do if j>=150 then if j<=150 then j=170 q=(q-q%1)else if j>177 then break else j=213 return q end end else if j>=79 then if j<98 then q=nil j=103 else j=150 q=((d/bz[c])%bz[e])end else j=79 q=nil end end end end z=1000 end end end else if z<=1326 then if z<=1223 then if z>1194 then z=1255 bm=function()local c,d,e,i,j,q,t,v=89,60,62,76,13,32,83,89,45,91,65,40,49,72,29,33,67 while c~=45 do if d>=230 then if d>=314 then if d<=314 then do if 0==j then do if 0~=v then j=1 e=0 else return(t*0)end end elseif 2047~=j then else do if not(v~=0)then do return(t*(0/a))end else return(t*(1/0))end end end end d=343 else if d>345 then break else d=384 return(t*(2^(j-1023))*(v/bc+e))end end else if d<=230 then j=bb(20,i,11)d=248 else if d>255 then d=314 e=1 else v=(bb(0,i,20)*4294967296+q)d=290 end end end else if d<=87 then if d<79 then d=87 e,i,j,q,t,v=nil else d=104 q=cf()end else if d<=104 then d=148 i=cf()else if d>151 then d=230 t=((-1)^bb(31,i,1))else if((q==0 and i==0))then do return 0 end end d=190 end end end end end end else z=1223 bo=function()local a,c c,a=ba(ci,by,(by+2))do by=(by+2);end return((a*256)+c);end end else if z<=1255 then bx=function(a,a,a)local a,c,d,e=72,51,10,54,89,25,33,36,50,20,79,60 while a~=30 do if c>=176 then if c>=198 then if c>206 then a=30;else c=232 do return e;end end else c=198 by=(by+d);end else if c>=97 then if c>99 then e=ci:sub(by,(by+d-m))c=176 else c=142 d=cf()end else d,e=nil c=97 end end end end z=1304 else if z>1306 then z=1346 do cj={}end else do bt=function(...)return{...},bn('#',...)end end z=1326 end end end else if z<=1384 then if z>=1361 then if z<1379 then bi={}z=1384 else z=1411 bf={}end else cd=function(a,c)local c,d,e,i,j,m,q,t=87,54,77,18,14,48,35,14,20,42,25,19,28,80,89,89,12,77,99,76,98,94,68,10,79 while c~=52 do if d<=301 then if d>=182 then if d>=265 then if d<294 then for v=1,cf()do m[v-1]=cd();end d=301 else d=318 j[10]=m;end else if d>187 then d=265 for v=(#cj+1),(#cj+e)do local w,y,ba,bb,bc=54,59,61,52,68,47,56,69,18,47,94,92,71,44,56,15,95,36,97,96,69,24 while w~=37 do if y<=278 then if y>=196 then if y>=251 then if y<273 then y=278 do ba[123]=cm(bc,1,2);end else do ba[114]=cm(bb,1,11);end y=318 end else if y<211 then y=213 bb=cf()else ba[29]=bd();y=251 end end else if y>=125 then if y>131 then bc=cf()y=196 else ba[50]=bd();y=147 end else if y>63 then y=125 ba={}else y=100 ba,bb,bc=nil end end end else if y<=414 then if y<=365 then if y>324 then ba[135]=cm(bc,12,20);y=380 else y=365 ba[145]=cm(bc,3,11);end else if y>383 then y=439 ba[142]=cm(bb,12,33);else y=414 ba[89]=cm(bc,21,29);end end else if y>=496 then if y>504 then break else y=533 cj[v]=ba;end else if y>442 then ba[161]=-ba[89]y=496 else y=478 ba[52]=-ba[145]end end end end end end else d=216 e=cf()end end else if d>=100 then if d<135 then do m={}end d=138 else d=182 j={}end else if d>59 then d=100 q={}else e,i,j,m,q,t=nil d=85 end end end else if d<=393 then if d>=353 then if d<384 then j[93]=q;d=393 else i=cf()d=439 end else if d>321 then do for e=1,cf()do local m,v,w,y,ba,bb=85,53,80,58,92,53,85,70,70,46,95,50,46,15,11,15,23,56,82,41,37,98,29,87 while m~=40 do if v<=321 then if v>=192 then if v>=240 then if v<=240 then w=cf()v=281 else if v<316 then do ba=cm(bb,1,2)end v=321 else v=354 y[u]=ba end end else if v<212 then v=215 do if 1==bd()then do for u=1,bd()do y[68][u]={bd()==0,cf()}end end end end else v=240 bb=cf()end end else if v<=68 then if v<62 then w,y,ba,bb=nil v=68 else v=110 y={{},nil,nil,nil}end else if v>118 then v=192 y[68]={};else v=153 do y[50]=bd();end end end end else if v>=470 then if v<=490 then if v<483 then y[29]=cm(bb,12,20);v=490 else do y[52]=-y[145]end v=505 end else if v>=543 then if v>546 then m=40;else v=573 q[e]=y;end else y[n]=-y[89]v=543 end end else if v>=422 then if v<438 then y[142]=cm(w,12,33);v=442 else y[89]=cm(bb,21,29);v=470 end else if v<382 then y[114]=cm(w,1,11);v=390 else y[145]=cm(bb,3,11);v=422 end end end end end end end d=353 else d=334 j[166]=bd();end end else if d<=471 then if d<463 then t={}d=471 else for e=1,i do local i,m,n,q=65,33,28,97,55,99,63,28,94,63,79,72,79,84 while i~=43 do if m<=76 then if m<=33 then m=58 n,q=nil else if m>63 then q=nil m=117 else m=76 n=bd()end end else if m<=117 then if(3==n)then q=(0~=bd());elseif(0==n)then do q=bm();end elseif(4==n)then q=bx();elseif(1==n)then q=a[bx()];end;m=143 else if m<159 then m=163 t[e]=q;else i=43;end end end end end d=496 end else if d<=496 then j[143]=t d=517 else if d>526 then c=52;else d=535 do return j;end end end end end end end end z=1361 end else if z<=1411 then bu=function(a,c,d,e,e,e)local e,i,j,m,n n=a[166]do e=bi end do j=a[93]end m=a[10]i=a[143]return function(...)local a,e,q,t,u,v,w,y,ba t=1 ba=-1 y=-1 e={}u={...}q=(bn('#',...)-1)w={}v={}for y=0,q do if(not(y<n))then e[(y-n)]=u[(y+f)];else v[y]=u[(y+1)];end;end;a=(q-n+1)while true do local f,n,q,u,y,bb,bc,bd,be,bf q=j[t]f=q[114]bb=q[h]bd=q[145]bc=q[135]y=q[g]n=q[29]u=q[52]bf=q[142]do be=q[161]end if not(f<34)then if not(f<51)then if not(f>59)then if not(f>54)then if not(f>52)then if(q[114]<52)then for g=bd,bf do v[g]=nil;end;else local g,h,u,bb g=bd do bb=((y-1)*50)end u=v[g]h=(ba-g)for bg=1,h do u[(bb+bg)]=v[(g+bg)]end;end else if(f>53)then local g,h,u g=m[bf]u=nil h={}u=cl({},{__index=function(bb,bb)local bb=h[bb];return bb[1][bb[2]];end,__newindex=function(bb,bb,bg)local bb=h[bb]bb[1][bb[2]]=bg;end;});for bb=1,y do local bg bg=q[68][bb]if bg[1]then do h[(bb-1)]={v,bg[2],nil,nil,nil};end else h[(bb-1)]={c,bg[2],nil};end;w[(#w+x)]=h;end;v[bd]=bu(g,u,d);else v[bd]=v[bf][v[y]];end end else if not(f>s)then if not(f~=55)then local g g=q[145]v[g]=v[g](cb(v,g+1,q[142]));else j[t]=cj[n];t=q[142];end else do if not(q[114]>57)then do v[bd]=v[bf];end else if(f>58)then local g g=bd v[g]=v[g]();else j[t]={[29]=0,[89]=95,[114]=f- -2,[142]=22,[145]=25};do t=(t-1);end end end end end end else if not(q[114]>63)then do if not(q[114]<62)then if(f<63)then c[bf]=v[bd];else do v[q[145]]=i[bf]end end else do if(f<61)then local g,h h=q[145]g=v[bf]v[(h+1)]=g;v[h]=g[i[y]];else do v[bd]=(v[bf]/i[y]);end end end end end else if not(f<66)then if not(f>66)then if((v[bd]<v[y]))then t=q[142];end;else if 67==f then while(v[bd]~=v[y])do t=bf;break end else do do return v[bd]end end end end else do if(f<65)then t=((v[q[145]]<v[y])and bf or t)else local g,h h=bd g={}if(#w>0)then do for n=1,#w do local s s=w[n]for n=0,#s do local u,x,bb do bb=s[n]end x=bb[1]u=bb[2]if(x==v and u>=0)then g[u]=x[u]do bb[1]=g end end end end end end return cb(v,h,ba);end end end end end else if not(f>41)then do if not(f<38)then if not(f<40)then if not(f~=40)then v[bd]=d[i[bf]];else local g g=bd v[g]=v[g](v[g+1]);end else if(q[114]<39)then t=bf;else v[bd]=(v[bf]+i[y]);end end else do if not(f>35)then do if(f>34)then j[t]={[142]=1,[114]=f-34,[145]=1,[89]=3,[29]=0};t=(t-1);else v[be]=(function()v[bd]=bu(m[bc],nil,d);end)end end else do if 36==f then do if not v[y]then v[bd]=v[y];t=q[142];end;end else v[bd]=nil;end end end end end end else if not(f>45)then if not(f<44)then if not(f~=44)then do v[q[145]]=#v[q[142]];end else if not v[bd]then t=q[142];end;end else if(f>42)then local g g=bd v[g](cb(v,(g+1),bf))else local g,h,n n=bd g={v[n](cb(v,n+1,bf))}do h=0 end do for s=n,y do h=(h+1);v[s]=g[h];end end end end else if not(f>47)then if 46==f then local g,h,n do g=bd end h=v[g]n=v[(g+2)]if((n>0))then if((h>v[g+1]))then do t=bf;end else v[(g+3)]=h;end elseif((h<v[g+1]))then t=bf;else do v[(g+3)]=h;end end else v[bd][i[bf]]=v[y];end else do if not(f>48)then local g do g=bd end do ba=(g+a-1);end do for a=g,ba do local h do h=e[(a-g)]end v[a]=h;end;end else do if 49==f then t=((i[bd]<v[q[89]])and bf or t)else v[bd]={};end end end end end end end end else if not(f>16)then do if not(f<8)then do if not(q[114]<12)then if not(f>13)then if(q[114]<13)then local a a=bd v[a](v[(a+1)])else v[bd]=(v[bf]*v[q[89]]);end else if not(f>14)then j[t]={[29]=p,[145]=4,[89]=59,[114]=f- -49,[142]=5};t=(t-1);else if(f>15)then do if(v[y]==v[bd])then t=bf;end;end else do t=((i[bd]~=i[y])and bf or t)end end end end else if not(f<10)then if(f>10)then local a,e,g,h a=q[145]h,e=bt(v[a](cb(v,(a+1),bf)))ba=(e+a-1)g=0 for e=a,ba do g=(g+1);v[e]=h[g];end;else t=((v[bd]==v[y])and bf or t)end else if(f>8)then v[q[145]]=(v[bf]%i[y]);else v[bd]=bu(m[bf],b,d);end end end end else if not(f<4)then do if not(f<6)then do if(f>6)then v[bd][v[bf]]=v[y];elseif(not(v[bd]~=i[y]))then t=bf;end end else do if(q[114]<5)then v[bd]=(v[q[142]]*i[y]);else local a,b b=bd do a={}end for d=1,#w do local e e=w[d]do for d=0,#e do local g,h,m g=e[d]m=g[1]h=g[2]if(m==v and h>=b)then a[h]=m[h];g[1]=a;end;end;end end;end end end end else if not(f>1)then if(f<1)then if(not(v[bd]==i[y]))then t=bf;end;else v[q[145]]=v[bf][i[y]];end else if(f<3)then local a,b,d do d=bd end a=v[d]b=(ba-d)for e=1,b do do a[e]=v[(d+e)]end end;else local a,b,d b=q[145]d=v[b]a=bf for e=1,a do d[e]=v[(b+e)]end;end end end end end else if not(f<25)then if not(f>28)then if not(f>26)then if 25==f then t=((i[bd]==i[y])and bf or t)else if((i[bd]<v[y]))then t=bf;end;end else if(q[114]<28)then local a a={}while#w>0 do for b=1,#w do local b=w[b]for d=0,#b do local b=b[d]local d=b[r]local e=b[2]if d==v and e>=0 then a[e]=d[e]b[1]=a end end end break end return f;else local a,b,d,e,g b=bd do e=y end d=(b+2)do g={v[b](v[b+1],v[d])}end for h=1,e do v[(d+h)]=g[h]end a=v[(b+3)]if a then v[d]=a else t=bf;end;end end else if not(q[114]>30)then do if(f<30)then local a,b b=bf do a=v[b]end for d=(b+1),y do a=(a..v[d]);end;do v[bd]=a;end else v[bd]=(v[bf]+v[y]);end end else do if not(f<32)then if(f>32)then v[bd][i[bf]]=i[y];else local a a=q[145]v[a]=v[a](cb(v,a+1,ba));end else do v[bd]();end end end end end else if not(f>20)then do if not(f<19)then if 19==f then v[bd]=c[bf];else local a a=bd do return v[a](cb(v,(a+1),ba))end;end else if(q[114]>17)then local a,b,c a=bd b=v[(a+2)]c=(v[a]+b)v[a]=c;if((b>0))then if(not(c>v[a+1]))then t=bf;v[(a+3)]=c;end elseif(not(c<v[a+1]))then t=q[142];v[(a+3)]=c;end else do v[bd]=(v[bf]-v[y]);end end end end else if not(f<23)then if(f>o)then do i=bi[q[145]](i)end else do j[t]={[114]=f-22,[29]=0,[142]=2,[89]=3,[145]=2};end t=(t-1);end else do if not(f~=21)then j[t]={[114]=f- -36,[89]=34,[145]=32,[142]=l,[29]=0};t=(t-1);elseif v[bd]then t=q[142];end end end end end end end t=(t+k);end;end;end z=1450 else if z<1463 then z=1472 return bu(cd(bv()),{},bv())();else break end end end end end end end end)(0,nil,2,5,2,1,89,50,15,1,1,25,1,161,23,0,14,1,56,4,123,7,9,1)
