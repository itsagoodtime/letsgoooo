--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg)local bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu=77,72,96,96,62,32,15,83,44,58,37,51,50,92,32,56,63,49,37,94,58,22,14,49,26,37,47,62,72,66,30,27,19,46,47,75,16,96,81,67,63,98,30,13,30,53,63,33,69,40 while bg~=66 do if bh<=713 then if bh>=393 then if bh<=520 then if bh<=425 then if bh>399 then bh=446 bs=type else bh=425 bt=select end else if bh<=446 then cf=(function(cv,cw)if not(bs(cv)~='number')then return true else return false end end)bh=472 else if bh>481 then bh=563 bl=math.floor else bh=520 cq=math.abs end end end else if bh>=660 then if bh>=691 then if bh<710 then bh=713 cp=bwfunction(cv,cw,cw,cw)do return bu[bx(cv,16)]end end)else bh=744 bp={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{d,2,1,0,7,6,5,4,11,10,9,8,15,r,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,z,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,g,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,f,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,m,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,bd,9,8,7,6,5,4,e,2,1,0,},nil,nil,nil}end else for d=0,255 do bu[d]=bk(d);end bh=691 end else if bh<=563 then bh=591 do cd=(unpack or table.unpack)end else if bh>598 then do bu={}end bh=660 else bh=633 bx=tonumber end end end end else if bh<=213 then if bh>=136 then if bh<=136 then bk=string.char bh=177 else if bh>179 then do bw=string.gsub end bh=236 else bh=213 bv=string.sub end end else if bh>77 then bh=136 do cb=string.byte end else bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu=nil bh=110 end end else if bh<=288 then if bh>=254 then if bh>257 then bh=326 do bi=table.insert end else bh=288 bm=table.concat end else do by=string.rep end bh=254 end else if bh<=326 then do cc=math.ldexp end bh=344 else if bh<370 then do cr=(getfenv or function()return _ENV end)end bh=374 else bo=setmetatable bh=393 end end end end end else if bh>=1037 then if bh<=1177 then if bh<=1063 then if bh<1061 then bh=1063 do ce=function()local d,e e,d=cb(cp,bq,(bq+2))do bq=(bq+2);end return((d*256)+e);end end else br=function()local d,e,f,g,m,r,z,bd=80,47,45,72,20,10,42,50,31,42,47,29,89,17,56,68,42,55,22 while d~=37 do if e<=194 then if e<=62 then if e>54 then z=ci()e=111 else f,g,m,r,z,bd=nil e=62 end else if e<=111 then e=149 g=ci()else if e>154 then bd=((-1)^cs(31,g,1))e=218 else do if((z==0 and g==0))then return bb end end e=194 end end end else if e>=308 then if e>=350 then if e<383 then e=390 return(bd*(2^(f-1023))*(m/cl+r))else d=37;end else if not(f~=0)then if 0~=m then f=1 do r=0 end else return(bd*0)end elseif not(f==2047)then else if not(m~=0)then do do return(bd*(0/0))end end else return(bd*(1/0))end end e=350 end else if e>=254 then if e<273 then m=(cs(t,g,20)*4294967296+z)e=281 else r=1 e=308 end else e=254 f=cs(20,g,11)end end end end end bh=1110 end else if bh>=1135 then if bh<1171 then bh=1177 bj=function(...)return{...},bt('#',...)end else ca={}bh=1204 end else bh=1135 do co=function(d,d,d)local d,e,f,g=57,52,78,82,24,57,96,74,65,17,92,70,95,69,71,61 while d~=36 do if e>=126 then if e>=165 then if e<205 then e=213 return g;else d=36;end else e=165 bq=(bq+f);end else if e<=52 then e=72 f,g=nil else if e<85 then e=91 f=ci()else e=126 g=cp:sub(bq,(bq+f-1))end end end end end end end end else if bh>=1320 then if bh<=1320 then bh=1367 cn=function(d,e,f,g,g)local g,m,r,t,z z=d[26]t=d[p]r=d[29]m=ck do g=d[180]end return function(...)local d,m,p,bb,bd,bi,bk,bl,bm bb=1 bi=-1 bd=-1 d={}p={...}m=(bt(x,...)-1)bl={}do bm={}end do for x=0,m do if(not(x<r))then do d[(x-r)]=p[(x+1)];end else do bm[x]=p[(x+1)];end end;end;end bk=(m-r+1)while true do local d,m,p,r,x,bd,bk,bs,bt,bu m=t[bb]do p=m[188]end bd=m[57]bu=m[47]r=m[179]x=m[a]bs=m[152]bk=m[27]d=m[183]bt=m[114]if not(p>34)then if not(p>16)then if not(p<8)then if not(p>11)then do if not(p<10)then if(p>10)then t[bb]={[47]=2,[152]=0,[183]=bf,[188]=p-5,[72]=94};bb=(bb-1);else do do return bm[bu]();end;end end else do if(p>8)then bm[bu][bm[d]]=bm[x];else local a a=bu bm[a](cd(bm,(a+1),m[183]))end end end end else if not(p>13)then do if not(p~=12)then while not bm[x]do bm[bu]=bm[x];bb=d;break end else bm[bu]={};end end else if not(p<15)then if(p<16)then bm[bu]=(bm[d]%g[x]);else bm[bu]=#bm[d];end else if((bm[bu]<bm[x]))then bb=d;end;end end end else if not(p>3)then if not(p>1)then if(p<1)then do bm[bu]=(bm[d]*g[x]);end elseif(bm[x]~=bm[bu])then bb=d;end else if(m[188]<3)then do do return bm[bu]end end else do bm[bu]=f[g[d]];end end end else if not(p<6)then if(p>6)then local a a=bu bm[a](bm[(a+1)])else bm[bu]=g[d]end else if 4==p then bm[bu]=bm[d][g[x]];else local a,bd,bf,bk bk=bu a,bf=bj(bm[bk](bm[(bk+1)]))bi=(bf+bk-1)bd=0 for bf=bk,bi do do bd=(bd+1);end bm[bf]=a[bd];end;end end end end else if not(p>25)then if not(p<21)then if not(p<j)then if not(p>23)then if bm[bu]then bb=d;end;else do if(m[q]>24)then t[bb]={[183]=65,[152]=0,[72]=25,[188]=p- -8,[47]=24};do bb=(bb-1);end else local a a=bu do return bm[a](cd(bm,(a+1),d))end;end end end else if 21==m[188]then local a,j,q j=bu q=bm[j]a=bm[(j+2)]if((a>0))then if((q>bm[j+1]))then bb=d;else bm[(j+3)]=q;end elseif((q<bm[j+1]))then bb=d;else bm[(j+3)]=q;end else while(g[bu]<bm[x])do bb=d;break end end end else if not(m[188]>18)then if(p>17)then bm[bu]=bm[d];else do t[bb]={[b]=1,[72]=2,[188]=p- -12,[152]=0,[47]=28};end bb=(bb-1);end else do if(p>19)then do g=ck[bu](g)end else local a,b do b=bu end a=bm[d]bm[(b+1)]=a;bm[b]=a[g[m[72]]];end end end end else if not(p>29)then if not(p<28)then if not(p~=28)then if(g[x]~=bm[bu])then bb=d;end;else local a a=bu bm[a]=bm[a]();end else if not(p~=26)then local a,b a=bu b={}while#bl>0 do for j=1,#bl do local j=bl[j]for q=0,#j do local j=j[q]local q=j[1]local bd=j[2]if q==bm and bd>=0 then b[bd]=q[bd]j[s]=b end end end break end return cd(bm,a,bi);else local a a=bu bm[a]=bm[a](cd(bm,a+1,d));end end else if not(m[188]>31)then if(p>30)then t[bb]={[47]=30,[152]=0,[72]=109,[188]=m[188]- -33,[183]=45};bb=(bb-1);else t[bb]={[183]=9,[72]=2,[152]=0,[47]=7,[188]=p-l};do bb=(bb-1);end end else if not(p<33)then if(p<u)then bm[bu][g[d]]=bm[x];else local a,b a=d b=bm[a]for j=(a+1),m[72]do b=(b..bm[j]);end;do bm[bu]=b;end end else local a,b,j j=m[47]b=bm[(j+2)]a=(bm[j]+b)bm[j]=a;if((b>0))then if(not(a>bm[j+1]))then bb=d;bm[(j+3)]=a;end elseif(not(a<bm[j+1]))then bb=m[183];bm[(j+w)]=a;end end end end end end else if not(p<53)then if not(p>61)then if not(p<57)then if not(p<59)then if not(p>59)then bb=((g[bu]~=g[x])and d or bb)else if 60==p then local a,b,j j=bu a={bm[j](bm[j+1])}b=0 for l=j,x do do b=(b+1);end bm[l]=a[b];end else local a a=bu bm[a](cd(bm,(a+1),bi))end end else if(p<58)then local a,b,j,l,q a=bu q=x j=(a+2)b={bm[a](bm[a+1],bm[j])}for s=1,q do bm[(j+s)]=b[s]end do l=bm[(a+3)]end do if l then bm[j]=l else do bb=d;end end;end else if(g[x]==bm[bu])then bb=d;end;end end else if not(p>54)then do if(m[188]<54)then local a,b,j b=bu j={bm[b](cd(bm,b+1,d))}a=0 do for l=b,x do a=(a+1);bm[l]=j[a];end end else bm[bu]=(bm[d]+g[x]);end end else do if not(p~=55)then if not bm[bu]then do bb=d;end end;else local a,b a=bu b={}for j=1,#bl do local l l=bl[j]for j=0,#l do local q,s,u s=l[j]q=s[1]u=s[2]if(q==bm and u>=a)then b[u]=q[u];s[1]=b;end;end;end;end end end end else do if not(p<66)then if not(p>67)then if(p>66)then t[bb]={[183]=2,[152]=0,[72]=0,[188]=p-34,[47]=n};bb=(bb-1);else bm[bu]=e[d];end else if not(p>68)then t[bb]={[188]=p-13,[152]=0,[72]=0,[47]=1,[183]=35};bb=(bb-1);else if(m[188]<70)then bb=d;else do for a=bu,d do bm[a]=nil;end;end end end end else do if not(m[188]>63)then if 62==p then bm[bu]=g[x]==bm[d];else local a,b,j,l j=bu b,a=bj(bm[j](cd(bm,(j+1),d)))bi=(a+j-c)l=0 for a=j,bi do l=(l+1);do bm[a]=b[l];end end;end else do if(p<65)then bm[bu][g[m[183]]]=g[x];else t[bb]={[72]=0,[152]=0,[188]=p-9,[v]=22,[183]=0};bb=(bb-1);end end end end end end end else do if not(m[188]>43)then if not(p>ba)then if not(p<37)then if not(p~=37)then bm[bt]=(function()bm[m[47]]=cn(z[r],nil,f);end)else local a,b,c b=z[d]c=nil a={}c=bo({},{__index=function(j,j)local j=a[j];return j[1][j[2]];end,__newindex=function(j,j,l)local j=a[j]j[1][j[2]]=l;end;});for j=1,x do local l l=m[34][j]if l[1]then a[(j-1)]={bm,l[2],nil,nil};else a[(j-1)]={e,l[2],nil,nil};end;bl[(#bl+1)]=a;end;bm[m[47]]=cn(b,c,f);end else if not(p~=35)then bm[bu]=bm[d][bm[x]];else local a,b,c a=bu b=bm[a]c=d for j=1,c do b[j]=bm[(a+j)]end;end end else if not(p<41)then if not(m[188]>41)then t[bb]={[72]=i,[188]=p-37,[183]=4,[47]=4,[152]=0};bb=(bb-1);else do if(p>42)then bm[bu]();else bm[bu]=cn(z[d],nil,f);end end end else if(p<40)then bm[m[47]]=(bm[d]+bm[m[72]]);else e[d]=bm[m[47]];end end end else if not(p>47)then if not(p<46)then if(m[188]>y)then do bm[bu]=(bm[m[183]]*bm[x]);end else local a a=m[47]bm[a]=bm[a](cd(bm,a+1,bi));end else if(p>44)then local a a={}if(#bl>0)then for b=1,#bl do local c c=bl[b]for b=0,#c do local e,f,i do f=c[b]end e=f[1]i=f[2]if(e==bm and i>=0)then a[i]=e[i]f[1]=a end end end end return m[r],bm[(bu+2)],true;else bb=((g[bu]==g[x])and d or bb)end end else if not(p<50)then if not(p>50)then do bm[bu]=(bm[d]/g[x]);end else if(p<52)then local a a=bu bm[a]=bm[a](bm[a+h]);else t[bb]=ca[bs];do bb=d;end end end else do if not(p~=48)then do bm[bu]=nil;end else bm[bu]=(bm[d]-bm[x]);end end end end end end end end bb=(bb+1);end;end;end else if bh<1394 then bh=1398 return cn(ch(cr()),{},cr())();else bg=66;end end else if bh>=1244 then if bh<1281 then ck={}bh=1287 else cj={}bh=1320 end else bh=1244 do ch=function(a,b,b)local b,c,d,e,f,g,h,i=71,61,14,67,10,53,20,59,15,87,65,69,46,12,28,87,97,52,10,48,93,22,84,24 while b~=53 do if c>=283 then if c>=401 then if c<=433 then if c>408 then c=480 for j=1,ci()do f[j-1]=ch();end else c=433 do h[180]=e end end else if c<=480 then c=520 do h[26]=f;end else if c>527 then b=53;else c=538 return h;end end end else if c<=309 then if c>285 then c=348 d=ci()else c=309 h[29]=cg();end else if c>350 then do for b=1,d do local j,l,m,n=74,53,55,84,93,85,91,99,55,20,49,76,18,26 while j~=30 do if l<=129 then if l>=91 then if l<127 then m=cg()l=129 else l=166 n=nil end else l=91 m,n=nil end else if l>=186 then if l<215 then l=219 e[b]=n;else j=30;end else if(4==m)then n=(not(cg()==0));elseif(0==m)then n=br();elseif(3==m)then do n=co();end elseif(not(m~=1))then do n=a[co()];end end;l=186 end end end end end c=401 else do e={}end c=367 end end end else if c>=156 then if c>=213 then if c>217 then do h[103]=g;end c=283 else for a=1,ci()do local b,j,l,m,n,p=74,61,82,26,12,62,87,77,33,99,72,37,40,35,60,95,94,65,55,81,57,45,81,10,25,35,11 while b~=49 do if j<=245 then if j>=159 then if j>=197 then if j<=197 then j=225 l=ci()else if j>229 then j=283 p[17]=n else n=cm(m,1,2)j=245 end end else if j<168 then j=177 if 1==cg()then for q=1,cg()do do p[34][q]={cg()==0,ci()}end end end else j=197 m=ci()end end else if j<=92 then if j<84 then l,m,n,p=nil j=92 else j=109 p={{},nil,nil}end else if j>117 then j=159 p[34]={};else p[bc]=cg();j=137 end end end else if j<=385 then if j>=349 then if j<379 then j=385 p[183]=cm(l,12,33);else p[72]=cm(m,21,29);j=416 end else if j>292 then p[47]=cm(m,3,11);j=349 else j=307 p[188]=cm(l,1,11);end end else if j<=431 then if j>422 then do p[27]=-p[47]end j=447 else j=431 p[152]=cm(m,12,20);end else if j<=447 then j=478 p[114]=-p[72]else if j<502 then j=506 do g[a]=p;end else b=49;end end end end end end end c=242 end else if c>160 then for a=(#ca+1),(#ca+i)do local b,j,l,m,n=64,39,54,58,49,77,91,22,73,90,55,13,92,50,62,43,32,15,88,23,39,30,85,17 while b~=36 do if j<=292 then if j>=180 then if j>=275 then if j>284 then j=309 l[188]=cm(n,1,11);else j=292 l[17]=cm(m,1,2);end else if j<220 then j=228 do n=ci()end else l[152]=cg();j=275 end end else if j>=99 then if j<132 then j=141 l[57]=cg();else m=ci()j=180 end else if j>47 then j=99 l={}else l,m,n=nil j=71 end end end else if j<=381 then if j<=335 then if j>313 then j=350 l[179]=cm(m,12,20);else j=335 l[47]=cm(m,3,11);end else if j<376 then j=381 l[72]=cm(m,21,29);else j=407 l[183]=cm(n,be,33);end end else if j>=455 then if j>463 then b=36;else j=499 ca[a]=l;end else if j>412 then l[114]=-l[o]j=455 else l[27]=-l[47]j=433 end end end end end end c=213 else c=180 i=ci()end end else if c>=105 then if c>109 then c=156 h={}else c=134 f={}end else if c<67 then c=76 d,e,f,g,h,i=nil else c=105 do g={}end end end end end end end end end end end else if bh>=899 then if bh>=980 then if bh>=1000 then if bh<1009 then ci=function()local a,b,c,d c,a,d,b=cb(cp,bq,(bq+3))bq=(bq+4);return((b*16777216)+(d*65536)+(a*256)+c);end bh=1016 else cg=function()local a a=cb(cp,bq,bq)bq=(bq+1);return a;end bh=1037 end else do bq=1 end bh=1000 end else if bh>=927 then if bh>933 then bh=980 cm=function(a,b,c,d,d,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end else bh=944 bz=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^k)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bp[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end else cs=function(a,b,c,d)local d,e,f=56,54,34,72,63,36,72,19,22,61,53,62 while d~=26 do if e<=123 then if e>=89 then if e>95 then do f=((b/cu[a])%cu[c])end e=156 else e=123 f=nil end else f=nil e=89 end else if e<=156 then e=180 f=(f-f%1)else if e<188 then e=195 do return f end else d=26;end end end end end bh=927 end end else if bh>=815 then if bh>=857 then if bh<876 then bh=882 do ct=2 end else bh=899 for a=1,31 do do cu[a]=ct end ct=(ct*2)end end else cu={[0]=1}bh=857 end else if bh>748 then do cl=(2^52)end bh=815 else bh=787 do bn=''end end end end end end end end)(72,183,1,3,3,12,9,1,18,23,32,3,6,1,72,103,188,14,1,0,34,47,3,'#',46,4,38,0,57,10,12,4)
